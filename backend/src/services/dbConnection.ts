import mongoose from 'mongoose';
import dotenv from 'dotenv';

// ÌôòÍ≤Ω Î≥ÄÏàò Î°úÎìú
dotenv.config();

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/un-thanks-project';
const MONGODB_DB_NAME = process.env.MONGODB_DB_NAME || 'un-thanks-project';
const MAX_RETRIES = 5;
const RETRY_INTERVAL = 5000; // 5Ï¥à

// MongoDB Ïó∞Í≤∞ Ìï®Ïàò
export const connectToDatabase = async (): Promise<void> => {
  let retries = 0;
  const tryConnect = async () => {
    try {
      if (!MONGODB_URI) {
        throw new Error('MONGODB_URI is not defined in environment variables');
      }

      const options = {
        useNewUrlParser: true,
        useUnifiedTopology: true,
        dbName: MONGODB_DB_NAME
      };

      await mongoose.connect(MONGODB_URI);
      console.log('‚úÖ Connected to MongoDB:', MONGODB_DB_NAME);
    } catch (error) {
      console.error('‚ùå MongoDB connection error:', error);
      
      if (retries < MAX_RETRIES) {
        retries++;
        console.log(`‚è±Ô∏è Ïó∞Í≤∞ Ïû¨ÏãúÎèÑ Ï§ë... (${retries}/${MAX_RETRIES})`);
        setTimeout(tryConnect, RETRY_INTERVAL);
      } else {
        console.error(`‚õî MongoDB Ïó∞Í≤∞ ÏãúÎèÑ ${MAX_RETRIES}Ìöå Ïã§Ìå®, ÏÑúÎ≤ÑÍ∞Ä Ï†úÌïúÎêú Í∏∞Îä•ÏúºÎ°ú Ïã§ÌñâÎê©ÎãàÎã§.`);
        throw error; // ÏµúÎåÄ Ïû¨ÏãúÎèÑ ÌõÑÏóêÎèÑ Ïã§Ìå®ÌïòÎ©¥ Ïò§Î•ò Î∞úÏÉù
      }
    }
  };

  await tryConnect();
};

// Ïó∞Í≤∞ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà
mongoose.connection.on('error', (err) => {
  console.error('MongoDB connection error:', err);
  
  // Ïó∞Í≤∞Ïù¥ ÎÅäÏñ¥ÏßÑ Í≤ΩÏö∞ Ïû¨Ïó∞Í≤∞ ÏãúÎèÑ
  if (mongoose.connection.readyState === 0) {
    console.log('üì° MongoDB Ïû¨Ïó∞Í≤∞ ÏãúÎèÑ Ï§ë...');
    connectToDatabase().catch(err => {
      console.error('MongoDB Ïû¨Ïó∞Í≤∞ Ïã§Ìå®:', err);
    });
  }
});

mongoose.connection.on('disconnected', () => {
  console.log('MongoDB disconnected');
  console.log('üì° MongoDB Ïû¨Ïó∞Í≤∞ ÏãúÎèÑ Ï§ë...');
  connectToDatabase().catch(err => {
    console.error('MongoDB Ïû¨Ïó∞Í≤∞ Ïã§Ìå®:', err);
  });
});

mongoose.connection.on('connected', () => {
  console.log('MongoDB reconnected');
});

// ÌîÑÎ°úÏÑ∏Ïä§ Ï¢ÖÎ£å Ïãú Ïó∞Í≤∞ Ï¢ÖÎ£å
process.on('SIGINT', async () => {
  await mongoose.connection.close();
  console.log('MongoDB connection closed due to app termination');
  process.exit(0);
});

export default mongoose.connection;
